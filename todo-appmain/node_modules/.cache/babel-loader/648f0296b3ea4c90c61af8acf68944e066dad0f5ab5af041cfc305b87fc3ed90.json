{"ast":null,"code":"var _jsxFileName = \"C:\\\\react_app2\\\\SpringProjects\\\\React_tutorial\\\\todo-app\\\\src\\\\Components\\\\todo\\\\security\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\n\n//Create a context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n//If any other class wants to make use of Authentication context, it can use 'UseAuth' hook\n\n//Share the created context with other components\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  //Put some state in context\n\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  //  setInterval(\n  //     ()=>setNumber(number+1),\n  //     10000\n  //  )\n\n  function login(Username, Password) {\n    if (Username === \"manish\" && Password === \"password\") {\n      setAuthenticated(true);\n      return true;\n    } else {\n      setAuthenticated(false);\n      return false;\n    }\n  }\n  function logout() {\n    setAuthenticated(false);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"5SSB8E6XvROKDUFw38DKoZLgQsI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","_ref","_s2","children","isAuthenticated","setAuthenticated","login","Username","Password","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react_app2/SpringProjects/React_tutorial/todo-app/src/Components/todo/security/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\n//Create a context\r\nexport const AuthContext= createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n//If any other class wants to make use of Authentication context, it can use 'UseAuth' hook\r\n\r\n\r\n\r\n//Share the created context with other components\r\nexport default function AuthProvider({children}){\r\n\r\n\r\n    //Put some state in context\r\n\r\n     const[isAuthenticated, setAuthenticated] = useState(false);\r\n    //  setInterval(\r\n    //     ()=>setNumber(number+1),\r\n    //     10000\r\n    //  )\r\n      \r\n\r\n    function login(Username, Password){\r\n        if (Username === \"manish\" && Password === \"password\") {\r\n            setAuthenticated(true);\r\n              return true;\r\n          } else {\r\n            setAuthenticated(false);\r\n            return false;\r\n          }\r\n    }\r\n\r\n    function logout(){\r\n          setAuthenticated(false);\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider value={{isAuthenticated, setAuthenticated, login, logout}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAEL,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;AACpD;;AAIA;AAAAE,EAAA,CALaD,OAAO;AAMpB,eAAe,SAASE,YAAYA,CAAAC,IAAA,EAAY;EAAAC,GAAA;EAAA,IAAX;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAG3C;;EAEC,MAAK,CAACG,eAAe,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3D;EACA;EACA;EACA;;EAGA,SAASY,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAC;IAC9B,IAAID,QAAQ,KAAK,QAAQ,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAClDH,gBAAgB,CAAC,IAAI,CAAC;MACpB,OAAO,IAAI;IACf,CAAC,MAAM;MACLA,gBAAgB,CAAC,KAAK,CAAC;MACvB,OAAO,KAAK;IACd;EACN;EAEA,SAASI,MAAMA,CAAA,EAAE;IACXJ,gBAAgB,CAAC,KAAK,CAAC;EAC7B;EAEA,oBACIT,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAACP,eAAe;MAAEC,gBAAgB;MAAEC,KAAK;MAAEG;IAAM,CAAE;IAAAN,QAAA,EAC3EA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACb,GAAA,CA/BuBF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}